# =============================================================================
# REUSABLE GITFLOW RELEASE CANDIDATE WORKFLOW
# =============================================================================
# This workflow provides standardized release candidate publishing for release/* branches
# across all QQQ repositories. It implements the DRY principle by centralizing
# all RC publishing logic in one reusable workflow.
#
# USAGE:
#   - uses: Kingsrook/github-actions-library/.github/workflows/reusable-gitflow-rc@main
#   - with:
#       project-type: 'hybrid'        # maven, npm, or hybrid
#       java-version: '17'           # Java version for Maven projects
#       node-version: '18'           # Node.js version for NPM projects
#       maven-args: ''               # Additional Maven arguments
#       npm-args: ''                 # Additional NPM arguments
#       maven-working-directory: '.' # Working directory for Maven project
#       npm-working-directory: '.'   # Working directory for NPM project
#       version-bump: 'patch'        # patch, minor, major, or auto
#       rc-number: '1'               # Release candidate number
#
# WORKFLOW STEPS:
#   1. Environment Validation - Validates all required secrets and configurations
#   2. Version Management - Bumps version numbers for RC release
#   3. Build and Test - Builds and tests Maven and/or NPM projects
#   4. Publishing - Publishes RC versions to Maven Central and NPM
#   5. Git Operations - Commits version changes and pushes to release branch
#
# BRANCH TRIGGERS:
#   - release/* branches (automatic)
#   - Manual workflow dispatch
# =============================================================================

name: 'Reusable GitFlow Release Candidate Workflow'

on:
  workflow_call:
    inputs:
      project-type:
        description: 'Type of project (maven, npm, or hybrid)'
        required: true
        type: string
        default: 'hybrid'
      java-version:
        description: 'Java version to use'
        required: false
        type: string
        default: '17'
      node-version:
        description: 'Node.js version to use'
        required: false
        type: string
        default: '18'
      maven-args:
        description: 'Additional Maven arguments'
        required: false
        type: string
        default: ''
      npm-args:
        description: 'Additional NPM arguments'
        required: false
        type: string
        default: ''
      maven-working-directory:
        description: 'Working directory for Maven project'
        required: false
        type: string
        default: '.'
      npm-working-directory:
        description: 'Working directory for NPM project'
        required: false
        type: string
        default: '.'
      version-bump:
        description: 'Version bump type (patch, minor, major, auto)'
        required: false
        type: string
        default: 'patch'
      rc-number:
        description: 'Release candidate number'
        required: false
        type: string
        default: '1'
    secrets:
      GPG_PRIVATE_KEY_B64:
        required: false
      GPG_KEYNAME:
        required: false
      GPG_PASSPHRASE:
        required: false
      CENTRAL_USERNAME:
        required: false
      CENTRAL_PASSWORD:
        required: false
      NPM_TOKEN:
        required: false

jobs:
  # ========================================================================
  # JOB 1: ENVIRONMENT VALIDATION
  # ========================================================================
  # This job runs first and validates all required environment variables,
  # secrets, and configurations. It's designed to fail fast if there are
  # any authentication or configuration issues.
  validate-environment:
    name: 'üîç Validate Environment'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Validate Environment & Secrets'
        uses: ./.github/actions/validate-environment
        with:
          project-type: ${{ inputs.project-type }}
          require-gpg: true
          require-maven: ${{ contains(inputs.project-type, 'maven') }}
          require-npm: ${{ contains(inputs.project-type, 'npm') }}

  # ========================================================================
  # JOB 2: VERSION MANAGEMENT
  # ========================================================================
  # This job handles version bumping for RC releases
  # - Determines current version from pom.xml or package.json
  # - Bumps version according to specified strategy
  # - Updates version files for both Maven and NPM projects
  version-management:
    name: 'üìù Version Management'
    runs-on: ubuntu-latest
    needs: validate-environment
    outputs:
      maven-version: ${{ steps.version-bump.outputs.maven-version }}
      npm-version: ${{ steps.version-bump.outputs.npm-version }}
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Bump Versions'
        uses: ./.github/actions/version-bump
        with:
          project-type: ${{ inputs.project-type }}
          version-bump: ${{ inputs.version-bump }}
          maven-working-directory: ${{ inputs.maven-working-directory }}
          npm-working-directory: ${{ inputs.npm-working-directory }}

      - name: 'Add RC Suffix'
        shell: bash
        run: |
          echo "üì¶ Adding RC suffix to versions..."
          
          # Add RC suffix to Maven version if present
          if [ -n "${{ steps.version-bump.outputs.maven-version }}" ]; then
            MAVEN_VERSION="${{ steps.version-bump.outputs.maven-version }}"
            RC_MAVEN_VERSION="${MAVEN_VERSION}-RC${{ inputs.rc-number }}"
            echo "maven-version=$RC_MAVEN_VERSION" >> $GITHUB_OUTPUT
            
            # Update pom.xml with RC version
            cd ${{ inputs.maven-working-directory }}
            mvn versions:set -DnewVersion="$RC_MAVEN_VERSION" -DgenerateBackupPoms=false
            echo "‚úÖ Maven version updated to $RC_MAVEN_VERSION"
          fi
          
          # Add RC suffix to NPM version if present
          if [ -n "${{ steps.version-bump.outputs.npm-version }}" ]; then
            NPM_VERSION="${{ steps.version-bump.outputs.npm-version }}"
            RC_NPM_VERSION="${NPM_VERSION}-RC${{ inputs.rc-number }}"
            echo "npm-version=$RC_NPM_VERSION" >> $GITHUB_OUTPUT
            
            # Update package.json with RC version
            cd ${{ inputs.npm-working-directory }}
            npm version $RC_NPM_VERSION --no-git-tag-version
            echo "‚úÖ NPM version updated to $RC_NPM_VERSION"
          fi

  # ========================================================================
  # JOB 3: BUILD AND TEST
  # ========================================================================
  # This job builds and tests the projects before publishing
  # - Runs Maven build lifecycle for Maven projects
  # - Runs NPM build and test for NPM projects
  # - Ensures quality before publishing
  build-and-test:
    name: 'üî® Build and Test'
    runs-on: ubuntu-latest
    needs: [validate-environment, version-management]
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: 'Build and Test Projects'
        uses: ./.github/actions/build-test
        with:
          project-type: ${{ inputs.project-type }}
          java-version: ${{ inputs.java-version }}
          node-version: ${{ inputs.node-version }}
          maven-args: ${{ inputs.maven-args }}
          npm-args: ${{ inputs.npm-args }}
          maven-working-directory: ${{ inputs.maven-working-directory }}
          npm-working-directory: ${{ inputs.npm-working-directory }}

  # ========================================================================
  # JOB 4: PUBLISH RELEASE CANDIDATES
  # ========================================================================
  # This job publishes RC versions to Maven Central and NPM
  # - Publishes Maven artifacts to Sonatype OSSRH
  # - Publishes NPM packages to NPM registry
  # - Handles GPG signing for both
  publish-rcs:
    name: 'üöÄ Publish Release Candidates'
    runs-on: ubuntu-latest
    needs: [validate-environment, version-management, build-and-test]
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: 'Publish Artifacts'
        uses: ./.github/actions/publish-artifacts
        with:
          project-type: ${{ inputs.project-type }}
          maven-working-directory: ${{ inputs.maven-working-directory }}
          npm-working-directory: ${{ inputs.npm-working-directory }}
          maven-args: ${{ inputs.maven-args }}
          npm-args: ${{ inputs.npm-args }}
          publish-type: 'rc'

  # ========================================================================
  # JOB 5: GIT OPERATIONS
  # ========================================================================
  # This job commits version changes and pushes to release branch
  # - Commits updated version files
  # - Pushes changes to release branch
  # - Creates a commit message with version information
  git-operations:
    name: 'üìù Git Operations'
    runs-on: ubuntu-latest
    needs: [validate-environment, version-management, publish-rcs]
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Git Operations'
        uses: ./.github/actions/git-operations
        with:
          commit-message: 'chore: bump version for RC release'
          branch: ${{ github.ref_name }}
          maven-version: ${{ needs.version-management.outputs.maven-version }}
          npm-version: ${{ needs.version-management.outputs.npm-version }}
